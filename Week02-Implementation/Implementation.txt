[ 구현 알고리즘 ]

- 머릿속에 있는 알고리즘을 소스코드로 바꾸는 과정
- 풀이는 떠올리기는 쉽지만, 소스코드를 작성하기 어려운 문제
- 프로그래밍 문법을 정확히 알고, 실수 없이 답안 코드를 작성하는 능력이 요구됨
- 완전 탐색(모든 경우의 수를 주저 없이 다 계산하는 해결 방법), 시뮬레이션(문제에서 제시한 알고리즘을 한 단계씩 차례대로 직접 수행) 유형이 모두 포함

[ 구현 알고리즘에서 고려해야할 사항 (Python) ]

- 자료형 지정이 필요 없으며 매우 큰 수의 연산도 기본으로 지원
- 실수형 변수는 유효숫자에 따라 연산 결과가 달라질 수 있음
- 리스트를 사용할 때는, 코딩 테스트의 메모리 제한을 고려해야 함
- 크기가 1,000만 이상인 리스트가 있다면 메모리 용량 제한으로 문제를 풀 수 없음
- 1초에 2,000만번의 연산을 수행한다고 가정하고 문제를 풀면 안전 (Python 3.7 기준)

